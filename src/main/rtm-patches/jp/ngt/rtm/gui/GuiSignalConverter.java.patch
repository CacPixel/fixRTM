--- a/jp/ngt/rtm/gui/GuiSignalConverter.java
+++ b/jp/ngt/rtm/gui/GuiSignalConverter.java
@@ -41,13 +41,13 @@
       }
 
       int[] aint = this.tileEntity.getSignalLevel();
       this.textFields.clear();
       this.signalValues = new GuiTextField[this.scType == SignalConverterType.RSOut ? 1 : 2];
-      this.signalValues[0] = this.setTextField(this.width / 2 - 20 + i, 60, 40, 20, String.valueOf(aint[0]));
+      this.signalValues[0] = this.setIntegerField(this.width / 2 - 20 + i, 60, 40, 20, String.valueOf(aint[0]));
       if (this.scType == SignalConverterType.RSIn || this.scType == SignalConverterType.Wireless) {
-         this.signalValues[1] = this.setTextField(this.width / 2 - 20 + i, 100, 40, 20, String.valueOf(aint[1]));
+         this.signalValues[1] = this.setIntegerField(this.width / 2 - 20 + i, 100, 40, 20, String.valueOf(aint[1]));
       }
 
    }
 
    protected void actionPerformed(GuiButton button) {
@@ -92,21 +92,15 @@
       }
 
       return aint;
    }
 
-   protected void keyTyped(char par1, int par2) {
-      if (par2 == 1 || par2 == this.mc.gameSettings.keyBindInventory.getKeyCode()) {
-         this.mc.player.closeScreen();
-      }
-
-      if (this.currentTextField != null && (par2 >= 2 && par2 <= 11 || par2 >= 200 && par2 <= 205 || par2 == 12 || par2 == 14 || par2 == 211)) {
-         this.currentTextField.textboxKeyTyped(par1, par2);
-      }
-
+   protected void keyTyped(char par1, int par2) throws java.io.IOException {
       if (par2 == 28) {
          this.formatSignalLevel();
+      } else {
+         super.keyTyped(par1, par2);
       }
 
    }
 
    public void drawScreen(int par1, int par2, float par3) {
