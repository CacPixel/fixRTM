--- a/jp/ngt/rtm/item/ItemInstalledObject.java
+++ b/jp/ngt/rtm/item/ItemInstalledObject.java
@@ -121,10 +121,11 @@
                   b0 = 7;
                }
 
                TileEntityFluorescent tileentityfluorescent = (TileEntityFluorescent)BlockUtil.getTileEntity(world, i, j, k);
                tileentityfluorescent.setDir(b0);
+               tileentityfluorescent.setRotation(entityplayer, entityplayer.isSneaking() ? 1.0F : 15.0F, true);
                this.updateResource(tileentityfluorescent, itemstack);
             }
          } else if (iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.CROSSING) {
             if (enumfacing == EnumFacing.UP) {
                block = RTMBlock.crossingGate;
@@ -250,10 +251,11 @@
                this.updateResource(tileentitypipe, itemstack);
             } else if (iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.PLANT) {
                block = RTMBlock.plant_ornament;
                BlockUtil.setBlock(world, i, j, k, block, 0, 3);
                TileEntityPlantOrnament tileentityplantornament = (TileEntityPlantOrnament)BlockUtil.getTileEntity(world, i, j, k);
+               tileentityplantornament.setRotation(entityplayer, entityplayer.isSneaking() ? 1.0F : 15.0F, true);
                this.updateResource(tileentityplantornament, itemstack);
             } else if (iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.SPEAKER) {
                block = RTMBlock.speaker;
                BlockUtil.setBlock(world, i, j, k, block, i1, 3);
                TileEntitySpeaker tileentityspeaker = (TileEntitySpeaker)BlockUtil.getTileEntity(world, i, j, k);
@@ -345,20 +347,24 @@
 
    protected ResourceType getModelType(ItemStack itemStack) {
       return ItemInstalledObject.IstlObjType.getType(itemStack.getItemDamage()).type;
    }
 
-   public int getGuiId(ItemStack stack) {
-      int i = stack.getItemDamage();
+   @Override @SideOnly(Side.CLIENT) public net.minecraft.client.gui.GuiScreen newGuiScreen(ItemArgHolder holder) {
+      int i = holder.getItemStack().getItemDamage();
       ItemInstalledObject.IstlObjType iteminstalledobject$istlobjtype = ItemInstalledObject.IstlObjType.getType(i);
       if (iteminstalledobject$istlobjtype != ItemInstalledObject.IstlObjType.RAILLOAD_SIGN && iteminstalledobject$istlobjtype != ItemInstalledObject.IstlObjType.FLAG) {
-         return iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.SIGNBOARD ? RTMCore.guiIdSignboard : RTMCore.guiIdSelectItemModel;
+         return iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.SIGNBOARD ? newGuiSignboard(holder) : newGuiSelectModel(holder);
       } else {
-         return RTMCore.guiIdSelectItemTexture;
+         return new jp.ngt.rtm.gui.GuiSelectTexture(new ResourceSelector(holder), null);
       }
    }
 
+   @SideOnly(Side.CLIENT) private net.minecraft.client.gui.GuiScreen newGuiSignboard(ItemArgHolder holder) {
+      return new jp.ngt.rtm.gui.GuiSignboard(new ResourceSelector(holder));
+   }
+
    protected ResourceState getNewState(ItemStack itemStack, ResourceType type) {
       ItemInstalledObject.IstlObjType iteminstalledobject$istlobjtype = ItemInstalledObject.IstlObjType.getType(itemStack.getItemDamage());
       return (ResourceState)(iteminstalledobject$istlobjtype == ItemInstalledObject.IstlObjType.SIGNBOARD ? new ResourceStateSignboard(type, (Object)null) : new ResourceState(type, (Object)null));
    }
 
