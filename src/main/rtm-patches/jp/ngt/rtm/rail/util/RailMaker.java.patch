--- a/jp/ngt/rtm/rail/util/RailMaker.java
+++ b/jp/ngt/rtm/rail/util/RailMaker.java
@@ -4,26 +4,37 @@
 import java.util.List;
 import jp.ngt.ngtlib.io.NGTLog;
 import net.minecraft.world.World;
 
 public final class RailMaker {
+   // see RailMapBasic.fixRTMRailMapVersion
+   public final int fixRTMRailMapVersion;
    private World worldObj;
    private List<RailPosition> rpList;
 
+   /** @deprecated use {@link #RailMaker(World, List, int)} */
+   @Deprecated
    public RailMaker(World world, List<RailPosition> par2) {
+      this(world, par2, 0);
+      com.anatawa12.fixRtm.Deprecation.found("RailMaker#RailMaker");
+   }
+
+   public RailMaker(World world, List<RailPosition> par2, int fixRTMRailMapVersion) {
       this.worldObj = world;
       this.rpList = par2;
+      this.fixRTMRailMapVersion = fixRTMRailMapVersion;
    }
 
+   /** @deprecated use {@link #RailMaker(World, RailPosition[], int)} */
+   @Deprecated
    public RailMaker(World world, RailPosition[] par2) {
-      this.worldObj = world;
-      this.rpList = new ArrayList<>();
+      this(world, par2, 0);
+      com.anatawa12.fixRtm.Deprecation.found("RailMaker#RailMaker");
+   }
 
-      for(RailPosition railposition : par2) {
-         this.rpList.add(railposition);
-      }
-
+   public RailMaker(World world, RailPosition[] par2, int fixRTMRailMapVersion) {
+      this(world, new ArrayList<>(java.util.Arrays.asList(par2)), fixRTMRailMapVersion);
    }
 
    private SwitchType getSwitchType() {
       if (this.rpList.size() == 3) {
          int i = 0;
@@ -31,33 +42,35 @@
          for(RailPosition railposition : this.rpList) {
             i += railposition.switchType == 1 ? 1 : 0;
          }
 
          if (i == 1) {
-            return new SwitchType.SwitchBasic();
+            return new SwitchType.SwitchBasic(fixRTMRailMapVersion);
          }
       } else if (this.rpList.size() == 4) {
          int j = 0;
 
          for(RailPosition railposition1 : this.rpList) {
             j += railposition1.switchType == 1 ? 1 : 0;
          }
 
          if (j == 2) {
-            return new SwitchType.SwitchSingleCross();
+            if (fixRTMRailMapVersion >= 1)
+               return new com.anatawa12.fixRtm.rtm.rail.util.SwitchTypeSingleCrossFixRTMV1(fixRTMRailMapVersion);
+            return new SwitchType.SwitchSingleCross(fixRTMRailMapVersion);
          }
 
          if (j == 4) {
             for(int k = 0; k < this.rpList.size(); ++k) {
                for(int l = k + 1; l < this.rpList.size(); ++l) {
                   if ((this.rpList.get(k)).direction == (this.rpList.get(l)).direction) {
-                     return new SwitchType.SwitchScissorsCross();
+                     return new SwitchType.SwitchScissorsCross(fixRTMRailMapVersion);
                   }
                }
             }
 
-            return new SwitchType.SwitchDiamondCross();
+            return new SwitchType.SwitchDiamondCross(fixRTMRailMapVersion);
          }
       }
 
       return null;
    }
@@ -79,13 +92,8 @@
          if (switchtype.init(list, list1)) {
             return switchtype;
          }
       }
 
-      if (this.worldObj != null && !this.worldObj.isRemote) {
-         RailPosition railposition1 = this.rpList.get(0);
-         NGTLog.sendChatMessageToAll("message.rail.switch_type", new Object[]{railposition1.blockX, railposition1.blockY, railposition1.blockZ});
-      }
-
       return null;
    }
 }
