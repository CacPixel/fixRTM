--- a/jp/ngt/rtm/rail/RenderMarkerBlock.java
+++ b/jp/ngt/rtm/rail/RenderMarkerBlock.java
@@ -89,15 +89,15 @@
    private void renderGUI(TileEntityMarker marker) {
       if (marker.gui == null) {
          int i = 61440;
          float f = 2.8F;
          float f1 = 0.5F;
-         float f2 = (f1 + 0.1F) * 5.0F + 0.1F;
+         float f2 = (f1 + 0.1F) * 6.0F + 0.1F;
          float f3 = 0.5F;
          float f4 = -(f + 0.2F) / 2.0F;
          marker.gui = (new InternalGUI(f4, f3, f + 0.2F, f2)).setColor(65535);
-         marker.buttons = new InternalButton[5];
+         marker.buttons = new InternalButton[6];
          f4 = f4 + 0.1F;
          f3 = f3 + 0.1F;
          marker.buttons[0] = (new InternalButton(f4, f3, f, f1)).setColor(i).setListner((button) -> {
             marker.flipState(MarkerState.ANCHOR21);
          });
@@ -115,10 +115,14 @@
          });
          f3 = f3 + f1 + 0.1F;
          marker.buttons[4] = (new InternalButton(f4, f3, f, f1)).setColor(i).setListner((button) -> {
             marker.flipState(MarkerState.DISTANCE);
          });
+         f3 = f3 + f1 + 0.1F;
+         marker.buttons[5] = (new InternalButton(f4, f3, f, f1)).setColor(i).setListner((button) -> {
+            marker.flipState(MarkerState.FIT_NEIGHBOR);
+         });
 
          for(int j = 0; j < marker.buttons.length; ++j) {
             marker.gui.addButton(marker.buttons[j]);
          }
       }
@@ -126,10 +130,11 @@
       marker.buttons[0].setText(marker.getStateString(MarkerState.ANCHOR21), 16777215, 0.05F);
       marker.buttons[1].setText(marker.getStateString(MarkerState.LINE2), 16777215, 0.05F);
       marker.buttons[2].setText(marker.getStateString(MarkerState.LINE1), 16777215, 0.05F);
       marker.buttons[3].setText(marker.getStateString(MarkerState.GRID), 16777215, 0.05F);
       marker.buttons[4].setText(marker.getStateString(MarkerState.DISTANCE), 16777215, 0.05F);
+      marker.buttons[5].setText(marker.getStateString(MarkerState.FIT_NEIGHBOR), 16777215, 0.05F);
       GL11.glPushMatrix();
       float f5 = 0.5F;
       if (marker.getState(MarkerState.LINE1)) {
          f5 = 1.0F;
       }
@@ -176,14 +181,25 @@
       for(int i1 = 1; i1 < this.displayStrings.length; ++i1) {
          float f8 = (float)i1 * 10.0F;
 
          for(int j1 = -1; j1 <= 1; ++j1) {
             float f9 = f8 * (float)j1;
+            com.anatawa12.fixRtm.asm.Preprocessor.ifDisabled("markerDistanceMoreRealPosition");
             ngttessellator.addVertex(-0.4F + f9, 0.0F, 0.4F + f8);
             ngttessellator.addVertex(-0.4F + f9, 0.0F, -0.4F + f8);
             ngttessellator.addVertex(0.4F + f9, 0.0F, -0.4F + f8);
             ngttessellator.addVertex(0.4F + f9, 0.0F, 0.4F + f8);
+            com.anatawa12.fixRtm.asm.Preprocessor.ifEnabled("markerDistanceMoreRealPosition");
+            ngttessellator.addVertex(-0.4F + f9, 0.0F, -0.4F + f8);
+            ngttessellator.addVertex(-0.4F + f9, 0.0F, -0.6F + f8);
+            ngttessellator.addVertex(0.4F + f9, 0.0F, -0.6F + f8);
+            ngttessellator.addVertex(0.4F + f9, 0.0F, -0.4F + f8);
+            ngttessellator.addVertex(-0.1F + f9, 0.0F, -0.1F + f8);
+            ngttessellator.addVertex(-0.1F + f9, 0.0F, -0.9F + f8);
+            ngttessellator.addVertex(0.1F + f9, 0.0F, -0.9F + f8);
+            ngttessellator.addVertex(0.1F + f9, 0.0F, -0.1F + f8);
+            com.anatawa12.fixRtm.asm.Preprocessor.whatever("markerDistanceMoreRealPosition");
          }
       }
 
       ngttessellator.draw();
       GL11.glEnable(3553);
@@ -193,11 +209,15 @@
          float f11 = (float)(l1 + 1) * 10.0F;
 
          for(int i2 = -1; i2 <= 1; ++i2) {
             float f10 = f11 * (float)i2;
             GL11.glPushMatrix();
+            com.anatawa12.fixRtm.asm.Preprocessor.ifDisabled("markerDistanceMoreRealPosition");
             GL11.glTranslatef(f10, 0.0F, f11);
+            com.anatawa12.fixRtm.asm.Preprocessor.ifEnabled("markerDistanceMoreRealPosition");
+            GL11.glTranslatef(f10, 0.0F, f11 - 0.5F);
+            com.anatawa12.fixRtm.asm.Preprocessor.whatever("markerDistanceMoreRealPosition");
             GL11.glRotatef(-NGTUtilClient.getMinecraft().getRenderManager().playerViewY - f6, 0.0F, 1.0F, 0.0F);
             GL11.glScalef(-0.25F, -0.25F, 0.25F);
             String s = this.displayStrings[l1];
             int k1 = fontrenderer.getStringWidth(s) / 2;
             fontrenderer.drawString(s, -k1 / 2, -10, l);
@@ -467,11 +487,11 @@
 
             if (rendermarkerblock$markerelement == RenderMarkerBlock.MarkerElement.CANT_EDGE) {
                float f12 = 80.0F;
                float f18 = f6 < -f12 ? -f12 : (f6 > f12 ? f12 : f6);
                RailPosition railposition2 = this.getNeighborRail(marker);
-               if (railposition2 != null) {
+               if (railposition2 != null && marker.getState(MarkerState.FIT_NEIGHBOR)) {
                   f18 = -railposition2.cantEdge;
                }
 
                railposition.cantEdge = f18;
                marker.onChangeRailShape();
@@ -553,19 +573,19 @@
                RailPosition railposition3 = this.getNeighborRail(marker);
                float f8 = (float)Math.atan2(d6, d7);
                float f19 = (float)(d6 / (double)MathHelper.sin(f8));
                float f9 = NGTMath.toDegrees(f8);
                if (rendermarkerblock$markerelement == RenderMarkerBlock.MarkerElement.HORIZONTIAL) {
-                  if (railposition3 != null) {
+                  if (railposition3 != null && marker.getState(MarkerState.FIT_NEIGHBOR)) {
                      f9 = MathHelper.wrapDegrees(railposition3.anchorYaw + 180.0F);
                   }
 
                   railposition.anchorYaw = f9;
                   railposition.anchorLengthHorizontal = f19;
                } else if (rendermarkerblock$markerelement == RenderMarkerBlock.MarkerElement.VERTICAL) {
                   float f10 = MathHelper.wrapDegrees(f9 - railposition.anchorYaw);
-                  if (railposition3 != null) {
+                  if (railposition3 != null && marker.getState(MarkerState.FIT_NEIGHBOR)) {
                      f10 = -railposition3.anchorPitch;
                   } else if (flag) {
                      double d4 = vec3d.y - railposition.posY;
                      f10 = (float)NGTMath.toDegrees(Math.atan2(d4, NGTMath.firstSqrt(d6 * d6 + d7 * d7)));
                   }
