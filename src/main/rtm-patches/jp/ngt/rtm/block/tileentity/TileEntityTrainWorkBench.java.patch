--- a/jp/ngt/rtm/block/tileentity/TileEntityTrainWorkBench.java
+++ b/jp/ngt/rtm/block/tileentity/TileEntityTrainWorkBench.java
@@ -16,13 +16,16 @@
 public class TileEntityTrainWorkBench extends TileEntityCustom implements ITickable {
    private ItemStack[] craftSlots = ItemUtil.getEmptyArray(30);
    public static final int Max_CraftingTime = 64;
    private int craftingTime = 0;
    private boolean isCrafting = false;
+   private boolean isCreative = false;
 
    public void readFromNBT(NBTTagCompound nbt) {
       super.readFromNBT(nbt);
+      net.minecraft.block.state.IBlockState state = getWorld().getBlockState(getPos());
+      this.getWorld().notifyBlockUpdate(this.pos, state, state, 0);
       NBTTagList nbttaglist = nbt.getTagList("Items", 10);
       Arrays.fill(this.craftSlots, ItemStack.EMPTY);
 
       for(int i = 0; i < nbttaglist.tagCount(); ++i) {
          NBTTagCompound nbttagcompound = nbttaglist.getCompoundTagAt(i);
@@ -52,11 +55,15 @@
    }
 
    public void update() {
       if (this.isCrafting) {
          if (this.craftingTime < 64) {
-            ++this.craftingTime;
+            if (this.isCreative) {
+               this.craftingTime = Max_CraftingTime;
+            } else {
+               ++this.craftingTime;
+            }
          } else {
             this.craftingTime = 0;
             this.isCrafting = false;
          }
       }
@@ -95,10 +102,11 @@
    }
 
    public void startCrafting(EntityPlayer player, boolean sendPacket) {
       this.craftingTime = 0;
       this.isCrafting = true;
+      this.isCreative = jp.ngt.ngtlib.util.NGTUtil.isServer() && player.capabilities.isCreativeMode;
       ContainerRTMWorkBench containerrtmworkbench = (ContainerRTMWorkBench)player.openContainer;
       containerrtmworkbench.startCrafting();
       if (sendPacket) {
          String s = "StartCrafting";
          RTMCore.NETWORK_WRAPPER.sendToServer(new PacketNotice((byte)0, s, this));
