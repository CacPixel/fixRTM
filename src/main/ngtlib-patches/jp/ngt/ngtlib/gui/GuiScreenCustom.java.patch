--- a/jp/ngt/ngtlib/gui/GuiScreenCustom.java
+++ b/jp/ngt/ngtlib/gui/GuiScreenCustom.java
@@ -41,10 +41,22 @@
       Keyboard.enableRepeatEvents(false);
    }
 
    protected GuiTextFieldCustom setTextField(int xPos, int yPos, int w, int h, String text) {
       GuiTextFieldCustom guitextfieldcustom = new GuiTextFieldCustom(NEXT_FIELD_ID++, this.fontRenderer, xPos, yPos, w, h, this);
+      return configureTextField(guitextfieldcustom, text);
+   }
+
+   protected com.anatawa12.fixRtm.ngtlib.gui.GUINumberFieldCustom setIntegerField(int xPos, int yPos, int w, int h, String text) {
+      return configureTextField(new com.anatawa12.fixRtm.ngtlib.gui.GUINumberFieldCustom(NEXT_FIELD_ID++, this.fontRenderer, xPos, yPos, w, h, this, false), text);
+   }
+
+   protected com.anatawa12.fixRtm.ngtlib.gui.GUINumberFieldCustom setFloatField(int xPos, int yPos, int w, int h, String text) {
+      return configureTextField(new com.anatawa12.fixRtm.ngtlib.gui.GUINumberFieldCustom(NEXT_FIELD_ID++, this.fontRenderer, xPos, yPos, w, h, this, true), text);
+   }
+
+   protected <T extends GuiTextFieldCustom> T configureTextField(T guitextfieldcustom, String text) {
       guitextfieldcustom.setMaxStringLength(32767);
       guitextfieldcustom.setFocused(false);
       guitextfieldcustom.setText(text);
       this.textFields.add(guitextfieldcustom);
       return guitextfieldcustom;
@@ -79,10 +91,19 @@
 
    protected void keyTyped(char par1, int par2) throws IOException {
       if (par2 == 1) {
          this.mc.displayGuiScreen((GuiScreen)null);
          this.mc.setIngameFocus();
+      } else if (par2 == org.lwjgl.input.Keyboard.KEY_TAB) {
+         if (this.currentTextField != null) {
+            this.currentTextField.setFocused(false);
+         }
+         int index = (this.textFields.indexOf(this.currentTextField) + 1) % this.textFields.size();
+         this.currentTextField = this.textFields.get(index);
+         this.currentTextField.setFocused(true);
+         this.currentTextField.setCursorPositionEnd();
+         this.currentTextField.setSelectionPos(0);
       } else {
          if (this.currentTextField != null) {
             this.currentTextField.textboxKeyTyped(par1, par2);
          } else {
             super.keyTyped(par1, par2);
