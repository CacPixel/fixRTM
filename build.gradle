buildscript {
    ext.kotlin_version = '1.3.70'
    ext.jasm_version = '1.0.3'
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath("com.anatawa12.jasm:jasm-gradle-plugin:$jasm_version") {
            exclude(group: "org.ow2.asm", module: "asm-debug-all")
        }
    }
}

apply plugin: "com.anatawa12.jasm"

apply plugin: "kotlin"
apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceSets {
    api {
        java {
            srcDirs("src/api/rtm", "src/api/ngtlib")
        }
    }
    main {
        jasm {
            srcDirs("src/main/rtm", "src/main/ngtlib")
        }
        resources {
            srcDirs("src/main/rtmResources", "src/main/ngtlibResources")
        }
    }
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations{
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
}

dependencies {
    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    shade group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.1.0'

    compileOnly files(sourceSets.main.jasm.outputDir)
    //compileOnly files(new File(projectDir, "mods/rtm.deobf.jar"),
    //        new File(projectDir, "mods/ngtlib.deobf.jar"))

    // https://mvnrepository.com/artifact/org.twitter4j/twitter4j-core
    apiCompile("org.twitter4j:twitter4j-core:4.0.7")
    // https://mvnrepository.com/artifact/com.github.sarxos/webcam-capture
    apiCompile("com.github.sarxos:webcam-capture:0.3.12")

    // https://mvnrepository.com/artifact/org.twitter4j/twitter4j-core
    compile("org.twitter4j:twitter4j-core:4.0.7")
    // https://mvnrepository.com/artifact/com.github.sarxos/webcam-capture
    compile("com.github.sarxos:webcam-capture:0.3.12")
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

runClient {
    environment("fml.coreMods.load", "com.anatawa12.fixRtm.asm.FixRtmCorePlugin")
    systemProperties["legacy.debugClassLoading"] = "true"
    systemProperties["legacy.debugClassLoadingSave"] = "true"
    if (!hasProperty("noLogin") && hasProperty("minecraft.login.username") && hasProperty("minecraft.login.password"))
    args += ["-username", getProperty("minecraft.login.username"), "-password", getProperty("minecraft.login.password")]
}

jar {
    configurations.shade.each {dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }

    manifest {
        attributes("FMLCorePlugin" : "com.anatawa12.fixRtm.asm.FixRtmCorePlugin",
        "FMLCorePluginContainsFMLMod": "*")
    }
}

compileKotlin {
    kotlinOptions {
        //freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}

runClient.inputs.property("always_changed", new Date())

apply from: "./processMods.gradle"
