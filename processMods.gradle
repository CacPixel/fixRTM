
task CopyJarToTest(type: Copy, dependsOn: reobfJar) {
    from jar.archivePath
    into new File(projectDir, "../fixRtmTest/mods")
}

task downloadRTM (type: DownloadModJar) {
    projectId = 288988
    version = "2.4.16"
    to = new File(projectDir, "mods/rtm.jar")
}

task downloadNgtLib (type: DownloadModJar) {
    projectId = 288989
    version = "2.4.14"
    to = new File(projectDir, "mods/ngtlib.jar")
}

def srgMcpsrgFile = file("${project.gradle.gradleUserHomeDir}" +
        "/caches/minecraft/de/oceanlabs/mcp" +
        "/mcp_${minecraft.mappingsChannel}/${minecraft.mappings.substring(minecraft.mappings.indexOf('_') + 1)}" +
        "/${minecraft.version}/srgs/srg-mcp.srg")

static String deObfuscatedJarPath(String path) {
    return path.substring(0, path.lastIndexOf('.')) + ".deobf.jar"
}

task deObfuscateRTM(type: DeObfuscateJar) {
    dependsOn downloadRTM
    dependsOn extractMcpMappings

    srgFile = srgMcpsrgFile
    obfuscatedJar = downloadRTM.to
    deObfuscatedJar = file(deObfuscatedJarPath("${downloadRTM.to}"))
}

task deObfuscateNgtLib(type: DeObfuscateJar) {
    dependsOn downloadNgtLib
    dependsOn extractMcpMappings

    srgFile = srgMcpsrgFile
    obfuscatedJar = downloadNgtLib.to
    deObfuscatedJar = file(deObfuscatedJarPath("${downloadNgtLib.to}"))
}

task decompileRTM(type: DecompileJar) {
    dependsOn deObfuscateRTM

    jarFile = deObfuscateRTM.deObfuscatedJar
    sourceOutputTo = file("${jarFile}.src")
}

task decompileNgtLib(type: DecompileJar) {
    dependsOn deObfuscateNgtLib

    jarFile = deObfuscateNgtLib.deObfuscatedJar
    sourceOutputTo = file("${jarFile}.src")
}

task copyRTMResources(type: Copy) {
    dependsOn downloadRTM

    from(zipTree(downloadRTM.to)) {
        exclude("**/*.class")
    }

    into(file("src/main/rtmResources"))
}

task copyNgtLibResources(type: Copy) {
    dependsOn downloadNgtLib

    from(zipTree(downloadNgtLib.to)) {
        exclude("**/*.class")
    }

    into(file("src/main/ngtlibResources"))
}

task decompileMods() {
    dependsOn decompileRTM, decompileNgtLib
}

task prepareMods() {
    dependsOn decompileMods
    dependsOn copyRTMResources, copyNgtLibResources
}

build.dependsOn prepareMods
