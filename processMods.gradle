final importantStructureDir = new File(projectDir, "important-structure")

task addImportantStructureDir(type: Exec) {
    commandLine 'git', 'add', importantStructureDir
}

task printResourceConfigFieldStructure(type: PrintFieldStructure) {
    dependsOn downloadModRtm
    finalizedBy addImportantStructureDir

    files = zipTree(downloadModRtm.destniation).matching {
        include "**/*.class"
    }
    outTo = new File(importantStructureDir, "fields-ResourceConfig")
    superClass = "jp.ngt.rtm.modelpack.cfg.ResourceConfig"
}

task printResourceSetFieldStructure(type: PrintFieldStructure) {
    dependsOn downloadModRtm
    finalizedBy addImportantStructureDir

    files = zipTree(downloadModRtm.destniation).matching {
        include "**/*.class"
    }
    outTo = new File(importantStructureDir, "fields-ResourceSet")
    superClass = "jp.ngt.rtm.modelpack.modelset.ResourceSet"

    condition = { String internalName ->
        internalName.startsWith("jp/ngt/rtm/modelpack/modelset/")
    }

    exclude "jp.ngt.rtm.modelpack.cfg.ResourceConfig"
}

task printRTMResourceStaticFields(type: PrintStaticFields) {
    dependsOn downloadModRtm
    finalizedBy addImportantStructureDir

    files = zipTree(downloadModRtm.destniation).matching {
        include "**/*.class"
    }
    outTo = new File(importantStructureDir, "fields-RTMResource.txt")
    ofClass = "jp.ngt.rtm.RTMResource"
}

task printModelPackLoadMethodCode(type: PrintMethodCode) {
    dependsOn downloadModRtm
    finalizedBy addImportantStructureDir

    files = zipTree(downloadModRtm.destniation).matching {
        include "**/*.class"
    }
    outTo = new File(importantStructureDir, "fields-ModelPackLoadMethodCode.txt")
    ofClass = "jp.ngt.rtm.modelpack.ModelPackManager"
    methodName = "load"
    methodDesc = "(Ljp/ngt/rtm/modelpack/init/ModelPackLoadThread;)V"
}

task printImportantStructure {
    dependsOn printResourceConfigFieldStructure
    dependsOn printResourceSetFieldStructure
    dependsOn printRTMResourceStaticFields
    dependsOn printModelPackLoadMethodCode
}

build.dependsOn printImportantStructure
