# Copyright (c) 2020 anatawa12 and other contributors
# This file is part of fixRTM, released under GNU LGPL v3 with few exceptions
# See LICENSE at https://github.com/fixrtm/fixRTM for more details

name: Release

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: name of version, if snapshot-generated, this will generated
        required: true
        default: 'snapshot-generated'
  schedule:
    # 0:00 in JST
    - cron: '0 15 * * *'

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment

    steps:
      - name: prepare git user data
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PUSH_KEY }}

      - uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: install auto-changelog
        id: install-auto-changelog
        run: sudo npm i -g https://github.com/anatawa12/auto-changelog

      - name: update for release and push
        id: prepare_build
        run: ./scripts/update_for_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_NAME_IN: ${{ github.event.inputs.version_name }}

      - name: prepare patching environment
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: preparePatchingEnvironment

      - name: apply patches
        run: ./pm.apply-patches

      - name: setup workspace
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: setupCiWorkspace

      - name: Build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build

      - name: push releases
        id: publish_releases
        run: ./scripts/publish_releases.sh
        env:
          VERSION_NAME: ${{ steps.prepare_build.outputs.version_name }}
          ASSET_PATH: ${{ steps.prepare_build.outputs.asset_path }}
          GITHUB_TOKEN: ${{ secrets.PUSH_KEY }}
          CURSE_TOKEN: ${{ secrets.CURSE_TOKEN }}
          PRERELEASE: ${{ steps.prepare_build.outputs.prerelease }}
          RELEASE_NOTE: ${{ steps.prepare_build.outputs.release_note_path }}

      - name: Upload To CurseForge
        id: upload_curse
        if: ${{ !fromJSON(steps.prepare_build.outputs.nightly) }}
        run: ./scripts/upload_to_curse.sh
        env:
          ASSET_PATH: ${{ steps.prepare_build.outputs.asset_path }}
          CURSE_TOKEN: ${{ secrets.CURSE_TOKEN }}
          RELEASE_NOTE: ${{ steps.prepare_build.outputs.release_note_path }}
          RELEASE_TYPE: ${{ steps.publish_releases.outputs.curse_release_type }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_build.outputs.version_name }}
          release_name: ${{ steps.prepare_build.outputs.version_name }}
          body_path: ${{ steps.prepare_build.outputs.release_note_path }}
          prerelease: ${{ steps.prepare_build.outputs.prerelease }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_build.outputs.asset_path }}
          asset_name: ${{ steps.prepare_build.outputs.asset_name }}
          asset_content_type: application/java-archive

      - name: Send message to discord
        id: message_discord
        if: ${{ !fromJSON(steps.prepare_build.outputs.nightly) }}
        run: ./scripts/send_message_to_discord.sh
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          TAG_NAME: ${{ steps.prepare_build.outputs.version_name }}
          CURSE_ID: ${{ steps.upload_curse.outputs.file_id }}
          PRERELEASE: ${{ steps.prepare_build.outputs.prerelease }}

          ASSET_PATH: ${{ steps.prepare_build.outputs.asset_path }}
          RELEASE_NOTE: ${{ steps.prepare_build.outputs.release_note_path }}
          RELEASE_TYPE: ${{ steps.publish_releases.outputs.curse_release_type }}
