# Copyright (c) 2020 anatawa12 and other contributors
# This file is part of fixRTM, released under GNU LGPL v3 with few exceptions
# See LICENSE at https://github.com/fixrtm/fixRTM for more details

name: Release

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: name of version.
          `a.b.c`, `a.b.c-betaN`, `a.b.c-rcN`, or `commit-release`
        required: true
  push:
    branches: [ master ]

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PUSH_KEY }}
      - uses: anatawa12/something-releaser@v2
      - run: set-git-user anatawa12-bot

      - uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: update for release and push
        id: prepare_build
        run: ./scripts/update_for_release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EVENT_NAME: ${{ github.event_name }}
          VERSION_NAME_IN: ${{ github.event.inputs.version_name }}

      - name: prepare patching environment
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: preparePatchingEnvironment

      - name: apply patches
        run: ./pm.apply-patches

      - name: Build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build

      - name: push releases
        id: publish_releases
        run: |
          # push
          git push
          git push origin "$VERSION_NAME"

          # curse info
          if [ "$PRERELEASE" = "true" ]; then
            release_type="alpha"
          else
            release_type="release"
          fi

          echo "::set-output name=curse_release_type::$release_type"
        env:
          VERSION_NAME: ${{ steps.prepare_build.outputs.version_name }}
          PRERELEASE: ${{ steps.prepare_build.outputs.prerelease }}

      - name: Upload To CurseForge
        id: upload_curse
        if: ${{ !fromJSON(steps.prepare_build.outputs.nightly) }}
        run: |
          # platform version infos
          # {"id":6756,"gameVersionTypeID":628,"name":"1.12.2","slug":"1-12-2"},
          # {"id":7498,"gameVersionTypeID":68441,"name":"Forge","slug":"forge"},
          # {"id":4458,"gameVersionTypeID":2,"name":"Java 8","slug":"java-8"},

          # project id for fixRTM is 365235
          # see https://www.curseforge.com/minecraft/mc-mods/fixrtm
          project_id=365235

          publish-to-curse-forge \
            --file "$ASSET_PATH" \
            --token "$CURSE_TOKEN" \
            --project-id "$project_id" \
            --changelog-file "$RELEASE_NOTE" \
            --changelog-type "markdown" \
            --release-type "$RELEASE_TYPE" \
            --game-versions "6756" \
            --game-versions "7498" \
            --game-versions "4458" \
            > response.json \
            || { echo "POST to curse forge failed" >&2; exit 255 }

          FILE_ID="$(jq '.id' < response.json)"

          echo "::set-output name=file_id::$FILE_ID"

        env:
          ASSET_PATH: ${{ steps.prepare_build.outputs.asset_path }}
          CURSE_TOKEN: ${{ secrets.CURSE_TOKEN }}
          RELEASE_NOTE: ${{ steps.prepare_build.outputs.release_note_path }}
          RELEASE_TYPE: ${{ steps.publish_releases.outputs.curse_release_type }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prepare_build.outputs.version_name }}
          release_name: ${{ steps.prepare_build.outputs.version_name }}
          body_path: ${{ steps.prepare_build.outputs.release_note_path }}
          prerelease: ${{ steps.prepare_build.outputs.prerelease }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.prepare_build.outputs.asset_path }}
          asset_name: ${{ steps.prepare_build.outputs.asset_name }}
          asset_content_type: application/java-archive

      - name: Send message to discord
        id: message_discord
        if: ${{ !fromJSON(steps.prepare_build.outputs.nightly) }}
        run: ./scripts/send_message_to_discord.sh
        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          TAG_NAME: ${{ steps.prepare_build.outputs.version_name }}
          CURSE_ID: ${{ steps.upload_curse.outputs.file_id }}
          PRERELEASE: ${{ steps.prepare_build.outputs.prerelease }}

          REQUIRED_RTM: ${{ steps.prepare_build.outputs.required_rtm }}
          REQUIRED_NGTLIB: ${{ steps.prepare_build.outputs.required_ngtlib }}

          ASSET_PATH: ${{ steps.prepare_build.outputs.asset_path }}
          RELEASE_NOTE: ${{ steps.prepare_build.outputs.release_note_path }}
          RELEASE_TYPE: ${{ steps.publish_releases.outputs.curse_release_type }}
