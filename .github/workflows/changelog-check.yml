# Copyright (c) 2020 anatawa12 and other contributors
# This file is part of fixRTM, released under GNU LGPL v3 with few exceptions
# See LICENSE at https://github.com/fixrtm/fixRTM for more details

# this workflow checks CHANGELOG.md & CHANGELOG-SNAPSHOTS.md is updated correctly
# to skip this check, include `NO-CHANGELOG` for both changelog CHANGELOG.md
# and `NO-CHANGELOG` for CHANGELOG.md only in tags of PR.
# also, this action ignores `dependencies` pull requests (expected to be generated by dependabot)

name: CHANGELOG check

on:
  pull_request:
    branches: [ master, master-* ]
    types: [ opened, synchronize, reopened, ready_for_review, labeled, unlabeled ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  releasenote-check:
    if: ${{ ! github.event.pull_request.draft }}
    runs-on: ubuntu-latest

    env:
      DEPENDABOT: ${{ github.event.user.id == 49699333 }} # 49699333 is dependabot[bot]
      DOCUMENTATION: ${{ contains(github.event.pull_request.labels.*.name, 'documentation') }}
      DEPENDENCIES: ${{ contains(github.event.pull_request.labels.*.name, 'dependencies') }}
      NO_CHANGELOG: ${{ contains(github.event.pull_request.labels.*.name, 'NO-CHANGELOG') }}
      SNAPSHOT_ONLY: ${{ contains(github.event.pull_request.labels.*.name, 'SNAPSHOT-ONLY') }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Fetch pull_request info
        env:
          GH_REPO: ${{ github.repositoryUrl }}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          PR_NUM: ${{ github.event.number }}
        run: |
          gh pr view $PR_NUM --json=files | jq --raw-output '.files[].path' > files.txt
      - name: Changelog check for CHANGELOG.md
        if: always() && !(fromJson(env.DOCUMENTATION) || fromJson(env.DEPENDENCIES) || fromJson(env.DEPENDABOT) || fromJson(env.NO_CHANGELOG) || fromJson(env.SNAPSHOT_ONLY))
        run: |
          if ! grep -e '^CHANGELOG.md$' < files.txt > /dev/null; then
            echo "::error::CHANGELOG.md is not updated!"
            exit 1
          fi
      - name: Changelog check for CHANGELOG-SNAPSHOTS.md
        if: always() && !(fromJson(env.DOCUMENTATION) || fromJson(env.DEPENDENCIES) || fromJson(env.DEPENDABOT) || fromJson(env.NO_CHANGELOG))
        run: |
          if ! grep -e '^CHANGELOG-SNAPSHOTS.md' < files.txt > /dev/null; then
            echo "::error::CHANGELOG-SNAPSHOTS.md is not updated!"
            exit 1
          fi
