diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/block/BlockArgHolder.java b/src/main/ngtlib/jp/ngt/ngtlib/block/BlockArgHolder.java
index 75376c7..63f0211 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/block/BlockArgHolder.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/block/BlockArgHolder.java
@@ -15,6 +15,7 @@ public class BlockArgHolder extends ItemArgHolderBase<BlockArgHolder> {
 
     public BlockArgHolder setBlockState(IBlockState par1) {
         this.state = par1;
+        return this;
     }
 
     public IBlockAccess getBlockAccess() {
@@ -23,5 +24,6 @@ public class BlockArgHolder extends ItemArgHolderBase<BlockArgHolder> {
 
     public BlockArgHolder setBlockAccess(IBlockAccess par1) {
         this.access = par1;
+        return this;
     }
 }
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/gui/GuiButtonCustom.java b/src/main/ngtlib/jp/ngt/ngtlib/gui/GuiButtonCustom.java
index 99d7e14..97d44b4 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/gui/GuiButtonCustom.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/gui/GuiButtonCustom.java
@@ -28,5 +28,6 @@ public class GuiButtonCustom extends GuiButton {
     public GuiButtonCustom addTips(String par1) {
         if (par1 != null)
             this.tips.add(par1);
+        return this;
     }
 }
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/gui/GuiTextFieldCustom.java b/src/main/ngtlib/jp/ngt/ngtlib/gui/GuiTextFieldCustom.java
index 4f42d09..7a918d1 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/gui/GuiTextFieldCustom.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/gui/GuiTextFieldCustom.java
@@ -480,6 +480,7 @@ public class GuiTextFieldCustom extends GuiTextField {
 
     public GuiTextFieldCustom addTips(String par1) {
         this.tips.add(par1);
+        return this;
     }
 
     public static interface TextFieldListner {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/ItemArgHolderBase.java b/src/main/ngtlib/jp/ngt/ngtlib/item/ItemArgHolderBase.java
index 733a8fe..0ada07a 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/ItemArgHolderBase.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/item/ItemArgHolderBase.java
@@ -9,7 +9,7 @@ import net.minecraft.util.EnumHand;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.world.World;
 
-public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
+public abstract class ItemArgHolderBase<T extends ItemArgHolderBase<T>> {
     private World world;
 
     private BlockPos pos;
@@ -24,6 +24,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
     public T setWorld(World par1) {
         this.world = par1;
+        return (T)this;
     }
 
     public BlockPos getBlockPos() {
@@ -32,6 +33,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
     public T setBlockPos(BlockPos par1) {
         this.pos = par1;
+        return (T)this;
     }
 
     public EntityPlayer getPlayer() {
@@ -40,6 +42,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
     public T setPlayer(EntityPlayer par1) {
         this.player = par1;
+        return (T)this;
     }
 
     public EnumFacing getFacing() {
@@ -48,6 +51,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
     public T setFacing(EnumFacing par1) {
         this.facing = par1;
+        return (T)this;
     }
 
     public static class ItemArgHolder extends ItemArgHolderBase<ItemArgHolder> {
@@ -63,6 +67,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
         public ItemArgHolder setItemStack(ItemStack par1) {
             this.itemStack = par1;
+            return this;
         }
 
         public EnumHand getHand() {
@@ -71,6 +76,7 @@ public abstract class ItemArgHolderBase<T extends ItemArgHolderBase> {
 
         public ItemArgHolder setHand(EnumHand par1) {
             this.hand = par1;
+            return this;
         }
 
         public ActionResult<ItemStack> pass() {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/RecipeManager.java b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/RecipeManager.java
index fe6a272..f44919e 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/RecipeManager.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/RecipeManager.java
@@ -30,7 +30,7 @@ public final class RecipeManager {
     @SubscribeEvent
     public void registerRecipes(RegistryEvent.Register<IRecipe> event) {
         IRecipe[] array = this.recipes.<IRecipe>toArray(new IRecipe[this.recipes.size()]);
-        event.getRegistry().registerAll((IForgeRegistryEntry[])array);
+        event.getRegistry().registerAll(array);
     }
 
     public static ShapedRecipes55 addRecipe(ItemStack output, Object... objs) {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/RepairRecipe.java b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/RepairRecipe.java
index 6a0501d..f69fac2 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/RepairRecipe.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/RepairRecipe.java
@@ -82,6 +82,7 @@ public class RepairRecipe implements IRecipe {
 
     public IRecipe setRegistryName(ResourceLocation name) {
         this.name = name;
+        return this;
     }
 
     public ResourceLocation getRegistryName() {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/ShapedRecipes55.java b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/ShapedRecipes55.java
index dbbad77..df00c77 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/item/craft/ShapedRecipes55.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/item/craft/ShapedRecipes55.java
@@ -124,6 +124,7 @@ public class ShapedRecipes55 implements IRecipe {
 
     public IRecipe setRegistryName(ResourceLocation name) {
         this.name = name;
+        return this;
     }
 
     public ResourceLocation getRegistryName() {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/ModelLoaderMMD.java b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/ModelLoaderMMD.java
index 61933af..f3964bf 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/ModelLoaderMMD.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/ModelLoaderMMD.java
@@ -1,7 +1,5 @@
 package jp.ngt.ngtlib.renderer.model;
 
-import com.na128.mmd.Pmx;
-import com.na128.mmd.Reader;
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -11,7 +9,7 @@ import net.minecraftforge.fml.relauncher.SideOnly;
 @SideOnly(Side.CLIENT)
 public final class ModelLoaderMMD {
     public static PolygonModel loadModel(InputStream[] is, String name, VecAccuracy par1, Object... args) throws IOException {
-        Pmx pmx = Reader.read(new File("path/to/pmx_or_pmd.pmx"));
+        // TODO: implement
         return null;
     }
 }
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/ObjModel.java b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/ObjModel.java
index 8d5e70b..ea3dbcd 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/ObjModel.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/ObjModel.java
@@ -80,7 +80,7 @@ public final class ObjModel extends PolygonModel {
             Vertex vertex = parseVertexNormal(currentLine, lineCount);
             if (vertex != null)
                 this.vertexNormals.add(vertex);
-        } else if ((currentLine.startsWith("g ") | currentLine.startsWith("o ")) != 0) {
+        } else if ((currentLine.startsWith("g ") | currentLine.startsWith("o "))) {
             GroupObject group = parseGroupObject(currentLine, lineCount);
             if (group != null)
                 if (this.currentGroupObject != null)
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/Vertex.java b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/Vertex.java
index 520d079..58b2143 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/renderer/model/Vertex.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/renderer/model/Vertex.java
@@ -18,10 +18,12 @@ public abstract class Vertex implements Comparable<Vertex> {
 
     public Vertex add(Vertex vertex) {
         setVec(getX() + vertex.getX(), getY() + vertex.getY(), getZ() + vertex.getZ());
+        return this;
     }
 
     public Vertex expand(float par1) {
         setVec(getX() * par1, getY() * par1, getZ() * par1);
+        return this;
     }
 
     public void normalize() {
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/NGTRegHandler.java b/src/main/ngtlib/jp/ngt/ngtlib/util/NGTRegHandler.java
index 57db5f3..09a7900 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/NGTRegHandler.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/util/NGTRegHandler.java
@@ -51,7 +51,7 @@ public class NGTRegHandler {
         } else {
             item = new ItemBlock((Block)block);
         }
-        ForgeRegistries.BLOCKS.register((IForgeRegistryEntry)block);
+        ForgeRegistries.BLOCKS.register(block);
         register(item, name, unlocalizedName, (CreativeTabs)null, modID);
         return block;
     }
@@ -63,7 +63,7 @@ public class NGTRegHandler {
         item.setTranslationKey(unlocalizedName);
         if (tab != null)
             item.setCreativeTab(tab);
-        ForgeRegistries.ITEMS.register((IForgeRegistryEntry)item);
+        ForgeRegistries.ITEMS.register(item);
         return item;
     }
 
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/Usage.java b/src/main/ngtlib/jp/ngt/ngtlib/util/Usage.java
index bb083fd..eaf5393 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/Usage.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/util/Usage.java
@@ -74,7 +74,7 @@ public final class Usage {
                             return true;
                         return false;
                     }
-                }par2);
+                }, par2);
         this.usages.put(new UsageKey(clazz, 0), entry);
         return entry;
     }
diff --git a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/VersionChecker.java b/src/main/ngtlib/jp/ngt/ngtlib/util/VersionChecker.java
index 0bce2c5..f89c4fa 100644
--- a/mods/ngtlib.deobf.jar.src.processed/jp/ngt/ngtlib/util/VersionChecker.java
+++ b/src/main/ngtlib/jp/ngt/ngtlib/util/VersionChecker.java
@@ -30,8 +30,7 @@ public class VersionChecker {
     }
 
     public static void checkVersion() {
-        checker.getClass();
-        Thread thread = new VersionCheckThread();
+        Thread thread = checker.new VersionCheckThread();
         thread.start();
     }
 
