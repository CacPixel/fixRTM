diff --git a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/modelpack/ModelPackManager.java b/src/main/rtm/jp/ngt/rtm/modelpack/ModelPackManager.java
index 7ea7959..44834c4 100644
--- a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/modelpack/ModelPackManager.java
+++ b/src/main/rtm/jp/ngt/rtm/modelpack/ModelPackManager.java
@@ -10,6 +10,8 @@ import java.util.List;
 import java.util.Map;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+
+import com.anatawa12.fixRtm.DummyModelPackManager;
 import jp.ngt.ngtlib.io.FileType;
 import jp.ngt.ngtlib.io.NGTFileLoader;
 import jp.ngt.ngtlib.io.NGTJson;
@@ -223,13 +225,8 @@ public final class ModelPackManager {
             parent = type.parent;
         boolean isSMPClient = (NGTUtil.isSMP() && !NGTUtil.isServer());
         Map<ResourceType, Map<String, ResourceSet>> map = isSMPClient ? this.smpModelSetMap : this.allModelSetMap;
-        ResourceSet resourceSet = (ResourceSet)((Map)map.get(parent)).get(name);
-        if (resourceSet == null) {
-            resourceSet = this.dummyMap.get(type.hasSubType ? type.subType : type.name);
-            if (resourceSet == null)
-                throw new ModelPackException("Default model is not registered.", name);
-        }
-        return (T)resourceSet;
+        ResourceSet resourceSet = (map.get(parent)).get(name);
+        return resourceSet == null ? (T)DummyModelPackManager.getSet(type, name) : (T)resourceSet;
     }
 
     public List<ResourceSet> getModelList(ResourceType type) {
diff --git a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/modelpack/ResourceType.java b/src/main/rtm/jp/ngt/rtm/modelpack/ResourceType.java
index ed0b1da..aecb2bb 100644
--- a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/modelpack/ResourceType.java
+++ b/src/main/rtm/jp/ngt/rtm/modelpack/ResourceType.java
@@ -63,7 +63,7 @@ public class ResourceType<C extends ResourceConfig, S extends ResourceSet> imple
         if (this == obj)
             return true;
         if (obj instanceof ResourceType)
-            ((ResourceType)obj).name.equals(this.name);
+            return ((ResourceType)obj).name.equals(this.name);
         return false;
     }
 
diff --git a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/rail/TileEntityLargeRailCore.java b/src/main/rtm/jp/ngt/rtm/rail/TileEntityLargeRailCore.java
index d00a0af..d3a7062 100644
--- a/mods/rtm.deobf.jar.src.processed/jp/ngt/rtm/rail/TileEntityLargeRailCore.java
+++ b/src/main/rtm/jp/ngt/rtm/rail/TileEntityLargeRailCore.java
@@ -172,8 +172,7 @@ public abstract class TileEntityLargeRailCore extends TileEntityLargeRailBase im
     @Nullable
     public RailMap[] getAllRailMaps() {
         RailMap rm = getRailMap((Entity)null);
-        (new RailMap[1])[0] = rm;
-        return (rm != null) ? new RailMap[1] : null;
+        return (rm != null) ? new RailMap[]{ rm } : null;
     }
 
     @SideOnly(Side.CLIENT)
